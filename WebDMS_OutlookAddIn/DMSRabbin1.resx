<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>